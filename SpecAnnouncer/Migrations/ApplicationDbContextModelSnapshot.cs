// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SpecAnnouncer.Data;

#nullable disable

namespace SpecAnnouncer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SpecAnnouncer.Data.Event", b =>
                {
                    b.Property<string>("UniqueName")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnOrder(0);

                    b.HasKey("UniqueName");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.EventHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(2);

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("EventUniqueName");

                    b.ToTable("EventsHistory");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.ResponseHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EventHistoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("ResponseReceived")
                        .HasColumnType("boolean")
                        .HasColumnOrder(3);

                    b.Property<string>("SubscriberUniqueName")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("EventHistoryId");

                    b.HasIndex("SubscriberUniqueName");

                    b.ToTable("ResponsesHistory");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.Subscriber", b =>
                {
                    b.Property<string>("UniqueName")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnOrder(0);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(1);

                    b.HasKey("UniqueName");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.SubscriberSignature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<string>("SubscriberUniqueName")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("EventUniqueName");

                    b.HasIndex("SubscriberUniqueName");

                    b.ToTable("SubscribersSignatures");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.EventHistory", b =>
                {
                    b.HasOne("SpecAnnouncer.Data.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventUniqueName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.ResponseHistory", b =>
                {
                    b.HasOne("SpecAnnouncer.Data.EventHistory", "EventHistory")
                        .WithMany()
                        .HasForeignKey("EventHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpecAnnouncer.Data.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberUniqueName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventHistory");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("SpecAnnouncer.Data.SubscriberSignature", b =>
                {
                    b.HasOne("SpecAnnouncer.Data.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventUniqueName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpecAnnouncer.Data.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberUniqueName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Subscriber");
                });
#pragma warning restore 612, 618
        }
    }
}
